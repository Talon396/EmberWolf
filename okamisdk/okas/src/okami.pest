WHITESPACE = _{ " " | "\t" | "\n" | "\r" | "\x0B" | "\x0C" | "\xA0" | SPACE_SEPARATOR }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

assembly = {
    SOI ~ (section | include_bin | data | align | constant | label | instruction)* ~ EOI
}

section = {
    ".text" |
    ".data" |
    ".rodata" |
    ".bss"
}

include_bin = { ".include_bin" ~ imm_str }

label = {
    label_local_scope |
    label_global_scope
}
label_local_scope = { "." ~ label_name ~ ":" }
label_global_scope = { label_kind? ~ label_name ~ ":" }
label_kind = {
    label_external |
    label_global
}
label_name = @{ label_name_chars+ }
label_name_chars = @{ ASCII_ALPHANUMERIC | "_" | "." }
label_external = { ".extern" }
label_global   = { ".global" }

constant = { ".const" ~ constant_name ~ operand }
constant_name = ${label_name ~ ":"}

instruction = {
    opcode_4 ~ operand ~ "," ~ operand ~ "," ~ operand ~ "," ~ operand |
    opcode_3 ~ operand ~ "," ~ operand ~ "," ~ operand |
    opcode_2_mem ~ operand ~ "," ~ operand ~ "(" ~ operand ~ ")" |
    opcode_2 ~ operand ~ "," ~ operand |
    opcode_1 ~ operand |
    opcode_0
}

operand = {
    register |
    imm_bin  |
    imm_hex  |
    imm_dec  |
    imm_char |
    label_name
}

opcode_0 = @{
    "nop" | /* PSEUDO-MNEMONIC */
    "rft"
}

opcode_1 = @{
    "kcall" |
    "bl" |
    "br" | /* PSEUDO-MNEMONIC */
    "b"
}

opcode_2 = @{
    "lui" |
    "mfex" |
    "mtex" |
    "aupc" |
    "blr" |
    "la" |
    "li"
}

opcode_2_mem = @{
    "lbu" |
    "lhu" |
    "lb" |
    "lh" |
    "lw" |
    "sb" |
    "sh" |
    "sw"
}

opcode_3 = @{
    "addi" |
    "add" |
    "sub" |
    "andi" |
    "and" |
    "ori" |
    "or" |
    "xori" |
    "xor" |
    "slli" |
    "sll" |
    "srli" |
    "srl" |
    "srai" |
    "sra" |
    "sltu" |
    "sltiu" |
    "slti" |
    "slt" |
    "beq" |
    "bne" |
    "bgeu" |
    "bltu" |
    "bge" |
    "blt"
}

opcode_4 = @{
    "mulu" |
    "mul" |
    "divu" |
    "div"
}

imm_bin  = ${ "0b" ~ body_bin }
body_bin       = @{ (ASCII_BIN_DIGIT | "_")+ }

imm_hex  = ${ "0x" ~ body_hex }
body_hex       = @{ (ASCII_HEX_DIGIT | "_")+ }

imm_dec  = ${ body_dec }
body_dec       = @{ (ASCII_DIGIT | "-" | "_")+ }

imm_char = ${ "'" ~ body_char ~ "'" }
body_char      = @{ '\x00'..'\x7F' }

imm_str  = ${ "\"" ~ body_str ~ "\"" }
body_str       = @{ body_str_chars* }
body_str_chars = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ body_str_chars
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

register = @{
    "zero" |
    "a0" |
    "a1" |
    "a2" |
    "a3" |
    "a4" |
    "a5" |
    "a6" |
    "a7" |
    "t0" |
    "t1" |
    "t2" |
    "t3" |
    "t4" |
    "t5" |
    "t6" |
    "t7" |
    "s0" |
    "s1" |
    "s2" |
    "s3" |
    "s4" |
    "s5" |
    "s6" |
    "s7" |
    "s8" |
    "s9" |
    "gp" |
    "tp" |
    "fp" |
    "sp" |
    "ra"
}

data = {
    data_byte |
    data_half |
    data_word |
    data_str |
    data_resb |
    data_resh |
    data_resw
}
data_byte = { ".byte" ~ operand }
data_half = { ".half" ~ operand }
data_word = { ".word" ~ operand }
data_str  = { ".string" ~ imm_str }
data_resb = { ".resb" ~ operand }
data_resh = { ".resh" ~ operand }
data_resw = { ".resw" ~ operand }

align = { ".align" ~ operand }
