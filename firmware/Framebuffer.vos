(include_asm "Framebuffer.s")
(extern Terminus OkamiLogo OkamiStation SystestText Dither)

(fn FramebufferDither (color)
    (int x row)
    (= row 0)
    (while (u< row 768)
        (= x (u% row 2))
        (while (u< x 1024)
            (b! (+ (u* row 1024) x 0x90001000) color)
            (= x (+ x 2))
        )
        (= row (+ row 1))
    )
)

(fn FramebufferDrawCenteredRect (x y w h color) (FramebufferDrawRect (- x (u/ w 2)) (- y (u/ h 2)) w h color))

(fn FramebufferDrawRect (x y w h color)
    (int i y2)
    (= y2 (+ y h))
    (= i y)
    (while (u< i y2)
        (memset (+ 0x90001000 (u* i 1024) x) w color)
        (= i (+ i 1))
    )
)

(fn FramebufferRenderMonochromeBitmap (x y w h scale color invert ptr)
    /* thx ry, ur the best :3 */
    (int i j byte_width)
    (= byte_width (u/ w 8))
    (= i 0)
    (= j 0)
    (while (u< i h)
        (while (u< j w)
            (if (& (b@ (+ ptr (u* i byte_width) (u/ j 8))) (<< 1 (- 7 (u% j 8))))
                (if invert
                    (FramebufferDrawRect (+ x (u* j scale)) (+ y (u* i scale)) scale scale color)
                    (FramebufferDrawRect (+ x (u* j scale)) (+ y (u* (- h i) scale)) scale scale color)
                )
            )
            (= j (+ j 1))
        )
        (= i (+ i 1))
        (= j 0)
    )
)

(fn FramebufferRenderRune (x y scale color rune) (FramebufferRenderMonochromeBitmap x y 8 16 scale color 1 (+ (Terminus) (u* rune 16))))
(fn FramebufferRenderString (x y scale color str)
    (int i len)
    (= len (strlen str))
    (= i 0)
    (while (u< i len)
        (FramebufferRenderRune (+ x (u* i (u* 8 scale))) y scale color (b@ (+ str i)))
        (= i (+ i 1))
    )
)

(fn FramebufferRenderBackground ()
    (int i j)
    /* 46 92 */
    (memset 0x90001000 786432 46)
    (FramebufferDrawRect 0 528 1024 240 92)
    (= i 0)
    (= j 0)
    (while (u< j 288)
        (while (u< i 1024)
            (memcpy32 (+ 0x90001000 (u* (+ j 240) 1024) i) (+ (Dither) (u* j 8)) 8)
            (= i (+ i 8))
        )
        (= i 0)
        (= j (+ j 1))
    )
)