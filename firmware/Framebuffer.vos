(include_asm "Framebuffer.s")

(extern Unifont)

(fn FramebufferDrawCenteredRect (x y w h color) (FramebufferDrawRect (- x (u/ w 2)) (- y (u/ h 2)) w h color))

(fn FramebufferDrawRect (x y w h color)
    (int i y2)
    (= y2 (+ y h))
    (= i y)
    (while (u< i y2)
        (memset (+ 0xb0001000 (u* i 1024) x) w color)
        (= i (+ i 1))
    )
)


/*(fn FramebufferRenderMonochromeBitmap (x y w h scale color ptr)
    (int i j byte_offset line_size)
    (= i 0)
    (while (u< i h)
        (= j 0)
        (while (u< j w)
            (= byte_offset (+ (u* i line_size) (u/ j 8)))
            (if (& (b@ (+ ptr byte_offset)) (<< 1 (- 7 (u% j 8))))
                (FramebufferDrawRect (+ x (u* j scale)) (+ y (u* (- h i) scale)) scale scale color)
            )
            (= j (+ j 1))
        )
        (= i (+ i 1))
    )
)*/

(fn FramebufferRenderMonochromeBitmap (x y w h scale color invert ptr)
    /* thx ry, ur the best :3 */
    (int i j bit pixel)
    (= i 0)
    (while (u< i h)
        (= j 0)
        (while (u< j w)
            (= bit 0)
            (while (u< bit 8)
                (= pixel (& (>> (b@ (+ ptr (u* i (u/ w 8)) (u/ j 8))) (- 7 bit)) 1))
                (if (!= pixel 0)
                    (if (+ invert)
                        (FramebufferDrawRect (+ x (u* (+ j bit) scale)) (+ y (u* i scale)) scale scale color)
                        (FramebufferDrawRect (+ x (u* (+ j bit) scale)) (+ y (u* (- h i) scale)) scale scale color)
                    )
                )
                (= bit (+ bit 1))
            )
            (= j (+ j 8))
        )
        (= i (+ i 1))
    )
)

(fn FramebufferRenderRune (x y scale color rune) (FramebufferRenderMonochromeBitmap x y 8 16 scale color 1 (+ (Unifont) (u* rune 16))))
(fn FramebufferRenderString (x y scale color str)
    (int i len)
    (= len (strlen str))
    (while (u< i len)
        (FramebufferRenderRune (+ x (u* i (u* 8 scale))) y scale color (b@ (+ str i)))
        (= i (+ i 1))
    )
)