(include "Dictionary.vos")
(include "Words.vos")

(int forthPromptLen 0)
(int tokenOff 0)
(int insnOff 0)
(int forthState 0)
(int dTop 0)
(int rTop 0)

(fn FORTH ()
    (int chr)
    (= dictHead (FWbss_end))
    (= dictTail (FWbss_end))
    (= dTop 255)
    (= rTop 255)
    (DefineWords)
    (ConsolePrint "ok\n")
    (while 1
        (if forthState (ConsolePrint "compile: ") (ConsolePrint "> "))
        (= forthPromptLen 0)
        (while 1
            (= chr (ConsoleGetChar))
            (if (== chr 10) (break) (| (!= chr 8) (& (== chr 8) (u> forthPromptLen 0))) (do
                (b! (+ (stringBuffer) forthPromptLen) chr)
                (if (| (== chr 8) (u< forthPromptLen 127)) (ConsoleWrite (+ (stringBuffer) forthPromptLen) 1))
                (if (== chr 8) (= forthPromptLen (- forthPromptLen 1)) 
                    (if (u>= forthPromptLen 127) (do) (= forthPromptLen (+ forthPromptLen 1)))
                )
            ))
        )
        (b! (+ (stringBuffer) forthPromptLen) 0)
        (= tokenOff 0)
        (ConsolePrint "  ")
        (fun_interpret)
        (ConsolePrint "\n")
    )
)

(var wordBuf 128)
(var dataStack 1024)
(var returnStack 1024)

(fn dPush (val) (w! (+ (dataStack) (u* dTop 4)) val) (= dTop (- dTop 1)))
(fn dPop () (= dTop (+ dTop 1)) (return (w@ (+ (dataStack) (u* dTop 4)))))
(fn rPeek () (return (w@ (+ (returnStack) (u* (+ rTop 1) 4)))))
(fn rPush (val) (w! (+ (returnStack) (u* rTop 4)) val) (= rTop (- rTop 1)))
(fn rPop () (= rTop (+ rTop 1)) (return (w@ (+ (returnStack) (u* rTop 4)))))