MODULE Console;
    IMPORT Framebuffer, Main;

    VAR cursorX, cursorY, kbdShift: INT;

    PROCEDURE ConsoleInit();
    BEGIN
        cursorX := 0;
        cursorY := 0;
        PUTCHAR(0B0000000H, 0); (* Set karasuFB to 1-bit 1024x768 mode *)
        FBSetPalEntry(0, 01E1E2EH);
        FBSetPalEntry(255, 0CDD6F4H);
        FBClear(0);
    END;

    PROCEDURE ConsolePutc(c: CHAR;);
    VAR i: INT;
    BEGIN
        IF c = 0AH THEN
            FBDrawRect(cursorX,cursorY,0);
            cursorX := 0;
            IF cursorY = 47 THEN
                (* Scroll *)
                i := 16;
                WHILE i <| 768 DO
                    memcpy(90001000H + ((i-16) *| 128),90001000H + (i *| 128),128);
                END;
            ELSE
                cursorY := cursorY + 1;
            END;
            FBDrawRect(cursorX,cursorY,0FFH);
        ELSE
            FBDrawChar(cursorX,cursorY,c);
            cursorX := cursorX + 1;
            FBDrawRect(cursorX,cursorY,0FFH);
        END;
    END;

    PROCEDURE ConsolePrint(c: POINTER TO CHAR;);
    BEGIN
        WHILE c^ # 0 DO
            ConsolePutc(c^);
            c := c + 1;
        END;
    END;

    PROCEDURE ConsoleGetChar(): CHAR;
    VAR key: INT;
    BEGIN
        WHILE 1 DO
            key := GETINT(0BE000040H);
            IF key = 3CH THEN
                kbdShift := 1;
            ELSIF key = 0C4H THEN
                kbdShift := 0;
            ELSIF (key # 0) & (key <| 80H) THEN BREAK(); END;
        END;
        IF key = 33H THEN RETURN(8);
        ELSIF key = 32H THEN RETURN(10);
        ELSIF kbdShift XOR 1 THEN RETURN(GETCHAR("0123456789abcdefghijklmnopqrstuvwxyz;  -=[]\\/.',`" + (key - 1)));
        ELSE RETURN(GETCHAR(")!@#$%^&*(ABCDEFGHIJKLMNOPQRSTUVWXYZ:  _+{}|?>\"<~" + (key - 1)));
        END;
    END;

    PROCEDURE ConsoleAccept(buf: POINTER TO CHAR; bufLen: INT;): INT;
    VAR len, chr: INT;
    BEGIN
        WHILE 1 DO
            chr := ConsoleGetChar();
            IF chr = 10 THEN BREAK();
            ELSIF (chr # 8) OR ((chr = 8) & (len >| 0)) THEN
                
            END;
        END;
    END;
END.