(var stringBuffer 128) /* This is a general purpose buffer that can be freely used for string manipulation */

(fn strlen (str)
    (int i)
    (= i 0)
    (while (!= (b@ (+ str i)) 0) (= i (+ i 1)))
    (return i)
)

(fn itoa (n str base)
    (int i)
    (= i 0)
    (while 1
        (if (u>= (u% n base) 10) (b! (+ str i) (+ (u% n base) 0x57)) (b! (+ str i) (+ (u% n base) 0x30)))
        (= i (+ i 1))
        (= n (u/ n base))
        (if (== n 0) (break))
    )
    (b! (+ str i) 0)
    (reverse str)
)

(fn reverse (str)
    (int i j c)
    (= i 0)
    (= j (- (strlen str) 1))
    (while (u< i j)
        (= c (b@ (+ str i)))
        (b! (+ str i) (b@ (+ str j)))
        (b! (+ str j) c)
        (= i (+ i 1))
        (= j (- j 1))
    )
)

(fn strncmp (str1 str2 n)
    (int i)
    (= i 0)
    (if (== n 0) (return 1))
    (while (== (b@ (+ str1 i)) (b@ (+ str2 i)))
        (if (== (b@ (+ str1 i)) 0) (return 1))
        (= i (+ i 1))
        (if (u>= i n) (return 1))
    )
    (return 0)
)

(fn isnumber (str)
    (int i c)
    (= i 0)
    (while (!= (b@ (+ str i)) 0)
        (= c (b@ (+ str i)))
        (if (| (u< c 48) (u> c 57)) (return 0))
        (= i (+ i 1))
    )
    (return 1)
)
(fn atoi10 (str)
    (int i res c)
    (= i 0)
    (= res 0)
    (while (!= (b@ (+ str i)) 0)
        (= c (b@ (+ str i)))
        (if (& (u>= c 48) (u<= c 57)) (do
            (= res (+ (u* res 10) (- c 48)))
        ) (return 0))
        (= i (+ i 1))
    )
    (return res)
)